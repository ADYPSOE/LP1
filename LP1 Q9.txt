import java.util.ArrayList;
import java.util.Scanner;

public class LRUPageReplacement {

    // Function to implement the LRU Page Replacement algorithm
    public static int lruPageReplacement(int[] pages, int frameSize) {
        ArrayList<Integer> frames = new ArrayList<>();
        int pageFaults = 0;

        // Process each page
        for (int page : pages) {
            if (!frames.contains(page)) {
                // Page fault occurs
                pageFaults++;
                
                // Check if frames have space
                if (frames.size() < frameSize) {
                    frames.add(page);
                } else {
                    // Remove the least recently used page
                    frames.remove(0);
                    frames.add(page);
                }
            } else {
                // Reorder frames to reflect recent usage
                frames.remove((Integer) page);
                frames.add(page);
            }
            // Display the current state of frames
            System.out.println("Page: " + page + " -> Frames: " + frames);
        }
        return pageFaults;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Input page sequence
        System.out.print("Enter the number of pages: ");
        int n = scanner.nextInt();
        int[] pages = new int[n];
        
        System.out.print("Enter the page sequence: ");
        for (int i = 0; i < n; i++) {
            pages[i] = scanner.nextInt();
        }
        
        // Input frame size
        System.out.print("Enter the frame size: ");
        int frameSize = scanner.nextInt();

        // Call the LRU page replacement function
        int pageFaults = lruPageReplacement(pages, frameSize);
        System.out.println("\nTotal Page Faults: " + pageFaults);
        
        scanner.close();
    }
}
